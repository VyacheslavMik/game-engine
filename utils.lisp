(in-package #:game-engine)

(defgeneric ->int (value))
(defgeneric ->float (value))
(defgeneric ->vector-2 (value))
(defgeneric copy (value))

(defmethod ->int ((value float))
  (if (>= value 0)
      (floor value)
      (floor (1+ value))))
(defmethod ->float ((value integer))
  (coerce value 'float))
(defmethod ->int ((value ratio))
  (->int (coerce value 'float)))
(defmethod ->float ((value ratio))
  (coerce value 'float))
(defmethod ->int ((value integer))
  value)
(defmethod ->float ((value float))
  value)
(defun random-range (min max)
  (+ (random (- max min)) min))
(defmethod ->vector-2 ((value rectangle))
  (make-vector-2 :x (->float (rectangle-x value))
		 :y (->float (rectangle-y value))))
(defmethod copy ((value rectangle))
  (make-rectangle :x (rectangle-x value)
		  :y (rectangle-y value)
		  :width (rectangle-width value)
		  :height (rectangle-height value)))
(defmethod copy ((value vector-2))
  (make-vector-2 :x (vector-2-x value)
		 :y (vector-2-y value)))
